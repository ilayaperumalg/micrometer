apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'me.champeau.gradle.jmh'
apply plugin: 'nebula.optional-base'
apply plugin: 'nebula.facet'

facets {
    samples
}

dependencies {
    // instrumentation options
    compile 'com.netflix.spectator:spectator-api:latest.release', optional
    compile 'io.prometheus:simpleclient:latest.release', optional
    compile 'io.prometheus:simpleclient_pushgateway:latest.release', optional
    compile 'com.datadoghq:java-dogstatsd-client:latest.release', optional
    compile 'io.dropwizard.metrics:metrics-core:3.+', optional

    // exporters
    compile 'com.netflix.spectator:spectator-reg-atlas:latest.release', optional
    compile 'io.dropwizard.metrics:metrics-graphite:3.+', optional
    compile 'io.dropwizard.metrics:metrics-ganglia:3.+', optional

    // cache monitoring
    compile 'com.google.guava:guava:21.0', optional
    compile 'com.github.ben-manes.caffeine:caffeine:2.3.0', optional

    // log monitoring
    compile 'ch.qos.logback:logback-classic:latest.release', optional

    // reactor
    compile 'io.projectreactor:reactor-core:3.1.0.BUILD-SNAPSHOT', optional

    testCompile 'io.projectreactor.addons:reactor-test:3.1.0.BUILD-SNAPSHOT'
    testCompile 'io.projectreactor.ipc:reactor-netty:latest.release'

    // JUnit 5
    testCompile 'org.junit.platform:junit-platform-launcher:1.0.0-M5' // see https://github.com/junit-team/junit5/issues/586 for why this is necessary
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0-M5'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.0.0-M5'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.0-M5'

    testCompile 'org.assertj:assertj-core:3.+'
    testCompile 'org.mockito:mockito-core:1.10.19'

    jmh 'org.openjdk.jmh:jmh-core:latest.release'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:latest.release'
    jmh 'colt:colt:1.2.0'

    samplesCompile 'colt:colt:1.2.0'
}

jmh {
    jmhVersion = '1.18'
    duplicateClassesStrategy = 'warn'
}
